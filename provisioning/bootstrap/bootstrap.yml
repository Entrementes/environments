---
- name: Ensure that python is available
  raw: sudo apt-get -y install python-simplejson

- name: Disable the firewall (since this is for local dev only).
  service: 
    name: ufw 
    state: stopped

- name: Add new ssh host signature
  become: no
  local_action: shell ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts

- name: Create System group
  group: 
    name: "{{ users.system.name }}" 
    gid: "{{ users.system.id }}" 
    state: present

- name: Create System user
  user: 
    name: "{{ users.system.name }}"
    comment: "The Administrator user" 
    uid: "{{ users.system.id }}" 
    group: "{{ users.system.name }}" 
    groups: sudo 
    shell: "/bin/bash"

- name: No password for user root
  user: 
    name: root 
    password: "*"

- name: Enable sudo without password (Debian)
  lineinfile:
    dest: /etc/sudoers 
    state: present 
    regexp: "^%sudo" 
    line: "%sudo   ALL=(ALL) NOPASSWD: ALL"

- name: Set up authorized_keys for the System user
  authorized_key: 
    user: "{{ users.system.name }}" 
    key: "{{ lookup('file', item) }}"
  with_fileglob: "~/.ssh/*.pub"

- name: Create Maintenance user group
  group: 
    name: "{{ users.maintenance.name }}" 
    gid: "{{ users.maintenance.id }}" 
    state: present

- name: Create Maintenance user
  user: 
    name: "{{ users.maintenance.name }}" 
    comment: "The Regular user" 
    uid: "{{ users.maintenance.id }}" 
    group: "{{ users.maintenance.name }}" 
    shell: "/bin/bash"

- name: Set up authorized_keys for the Maintenance user
  authorized_key: 
    user: "{{ users.maintenance.name }}"
    key: "{{ lookup('file', item) }}"
  with_fileglob: "~/.ssh/*.pub"

- name: Add hosts mapping
  template:
    src: "hosts.{{ env.type }}.j2"
    dest: /etc/hosts
  when: env['add_hosts']

- name: Update APT repo
  apt: 
    update_cache: yes
